# Generated by Django 4.2.7 on 2023-12-19 18:54

from django.db import migrations, models
import users.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        db_index=True, max_length=255, unique=True
                    ),
                ),
                (
                    "first_name",
                    models.CharField(db_index=True, max_length=255),
                ),
                ("last_name", models.CharField(db_index=True, max_length=255)),
                (
                    "email",
                    models.EmailField(
                        db_index=True, max_length=254, unique=True
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        verbose_name="код активации аккаунта",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Фото пользователя",
                        null=True,
                        upload_to=users.models.User.get_userfiles_path,
                        verbose_name="фото профиля",
                    ),
                ),
                (
                    "attempts_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Число неудачных попыток входа",
                        verbose_name="попытки входа",
                    ),
                ),
                (
                    "reactivation_time",
                    models.DateTimeField(
                        blank=True,
                        help_text="Время преодоления порога максимального числа неудачных попыток войти",
                        null=True,
                        verbose_name="время деактивации аккаунта",
                    ),
                ),
                (
                    "passport_img",
                    models.ImageField(
                        blank=True,
                        help_text="Фото вашего паспорта",
                        null=True,
                        upload_to=users.models.User.get_userfiles_path,
                        verbose_name="фото паспорта",
                    ),
                ),
                (
                    "passport_verification",
                    models.BooleanField(
                        default=False,
                        help_text="флаг отвечающий за подтвержденность паспорта",
                        verbose_name="статус верификации паспорта",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
